package pkg

import java.io.File
import java.io.FileWriter
import java.util.Scanner

open class TestTryWithResourcesOuterJ16 {
   open fun test(file: File) {
      Scanner scanner = new Scanner(file);// 11
      Scanner var3 = scanner;

      try {
         scanner.next();// 14
      } catch (Throwable var7) {// 13
         if (scanner != null) {
            try {
               var3.close();
            } catch (Throwable var6) {
               var7.addSuppressed(var6);
            }
         }

         throw var7;
      }

      if (scanner != null) {// 15
         scanner.close();
      }

   }// 16

   open fun testFunc(file: File) {
      Scanner scanner = this.create(file);// 19
      Scanner var3 = scanner;

      try {
         scanner.next();// 22
      } catch (Throwable var7) {// 21
         if (scanner != null) {
            try {
               var3.close();
            } catch (Throwable var6) {
               var7.addSuppressed(var6);
            }
         }

         throw var7;
      }

      if (scanner != null) {// 23
         scanner.close();
      }

   }// 24

   open fun testMulti(file: File) {
      Scanner scanner = new Scanner(file);// 27
      FileWriter writer = new FileWriter(file);// 28
      Scanner var4 = scanner;

      try {
         FileWriter var5 = writer;

         try {
            scanner.next();// 31
            writer.write("hello");// 32
         } catch (Throwable var10) {
            if (writer != null) {
               try {
                  var5.close();
               } catch (Throwable var9) {
                  var10.addSuppressed(var9);
               }
            }

            throw var10;
         }

         if (writer != null) {
            writer.close();
         }
      } catch (Throwable var11) {// 30
         if (scanner != null) {
            try {
               var4.close();
            } catch (Throwable var8) {
               var11.addSuppressed(var8);
            }
         }

         throw var11;
      }

      if (scanner != null) {// 33
         scanner.close();
      }

   }// 34

   open fun testNested1(file: File) {
      Scanner scanner = new Scanner(file);// 37
      FileWriter writer = new FileWriter(file);// 38
      Scanner var4 = scanner;

      try {
         scanner.next();// 41
         FileWriter var5 = writer;

         try {
            writer.write("hello");// 44
         } catch (Throwable var10) {// 43
            if (writer != null) {
               try {
                  var5.close();
               } catch (Throwable var9) {
                  var10.addSuppressed(var9);
               }
            }

            throw var10;
         }

         if (writer != null) {// 45
            writer.close();
         }
      } catch (Throwable var11) {// 40
         if (scanner != null) {
            try {
               var4.close();
            } catch (Throwable var8) {
               var11.addSuppressed(var8);
            }
         }

         throw var11;
      }

      if (scanner != null) {// 46
         scanner.close();
      }

   }// 47

   open fun testNested2(file: File) {
      Scanner scanner = new Scanner(file);// 50
      FileWriter writer = new FileWriter(file);// 51
      Scanner var4 = scanner;

      try {
         FileWriter var5 = writer;

         try {
            scanner.next();// 55
            writer.write("hello");// 56
         } catch (Throwable var10) {// 54
            if (writer != null) {
               try {
                  var5.close();
               } catch (Throwable var9) {
                  var10.addSuppressed(var9);
               }
            }

            throw var10;
         }

         if (writer != null) {// 57
            writer.close();
         }
      } catch (Throwable var11) {// 53
         if (scanner != null) {
            try {
               var4.close();
            } catch (Throwable var8) {
               var11.addSuppressed(var8);
            }
         }

         throw var11;
      }

      if (scanner != null) {// 58
         scanner.close();
      }

   }// 59

   open fun testSame1(file: File) {
      Scanner scanner = new Scanner(file);// 62
      Scanner var3 = scanner;

      try {
         scanner.next();// 65
         Scanner var4 = scanner;

         try {
            scanner.next();// 68
         } catch (Throwable var9) {// 67
            if (scanner != null) {
               try {
                  var4.close();
               } catch (Throwable var8) {
                  var9.addSuppressed(var8);
               }
            }

            throw var9;
         }

         if (scanner != null) {// 69
            scanner.close();
         }
      } catch (Throwable var10) {// 64
         if (scanner != null) {
            try {
               var3.close();
            } catch (Throwable var7) {
               var10.addSuppressed(var7);
            }
         }

         throw var10;
      }

      if (scanner != null) {// 70
         scanner.close();
      }

   }// 71

   open fun testSame2(file: File) {
      Scanner scanner = new Scanner(file);// 74
      Scanner var3 = scanner;

      try {
         Scanner var4 = scanner;

         try {
            scanner.next();// 78
         } catch (Throwable var9) {// 77
            if (scanner != null) {
               try {
                  var4.close();
               } catch (Throwable var8) {
                  var9.addSuppressed(var8);
               }
            }

            throw var9;
         }

         if (scanner != null) {// 79
            scanner.close();
         }
      } catch (Throwable var10) {// 76
         if (scanner != null) {
            try {
               var3.close();
            } catch (Throwable var7) {
               var10.addSuppressed(var7);
            }
         }

         throw var10;
      }

      if (scanner != null) {
         scanner.close();// 80
      }

   }// 81

   open fun testSame3(file: File) {
      Scanner scanner = new Scanner(file);// 84
      Scanner var3 = scanner;

      try {
         Scanner var4 = scanner;

         try {
            scanner.next();// 88
         } catch (Throwable var9) {// 87
            if (scanner != null) {
               try {
                  var4.close();
               } catch (Throwable var8) {
                  var9.addSuppressed(var8);
               }
            }

            throw var9;
         }

         if (scanner != null) {// 89
            scanner.close();
         }

         scanner.next();// 91
      } catch (Throwable var10) {// 86
         if (scanner != null) {
            try {
               var3.close();
            } catch (Throwable var7) {
               var10.addSuppressed(var7);
            }
         }

         throw var10;
      }

      if (scanner != null) {// 92
         scanner.close();
      }

   }// 93

   open fun testSame4(file: File) {
      try (Scanner scanner = new Scanner(file)) {
         Scanner var3 = scanner;

         try {
            scanner.next();// 98
         } catch (Throwable var8) {// 97
            if (scanner != null) {
               try {
                  var3.close();
               } catch (Throwable var7) {
                  var8.addSuppressed(var7);
               }
            }

            throw var8;
         }

         if (scanner != null) {// 99
            scanner.close();
         }
      }

   }// 96 100

   private fun create(file: File): Scanner {
      return new Scanner(file);// 104
   }
}

class 'pkg/TestTryWithResourcesOuterJ16' {
   method 'test (Ljava/io/File;)V' {
      4      8
      8      8
      9      9
      a      9
      b      12
      c      12
      d      12
      e      12
      11      25
      15      26
      16      26
      17      26
      1b      13
      1e      14
      21      16
      22      16
      28      17
      2e      18
      33      22
      34      29
   }

   method 'testFunc (Ljava/io/File;)V' {
      0      32
      1      32
      2      32
      3      32
      4      32
      5      32
      6      33
      7      33
      8      36
      9      36
      a      36
      b      36
      e      49
      12      50
      13      50
      14      50
      18      37
      1b      38
      1e      40
      1f      40
      25      41
      2b      42
      30      46
      31      53
   }

   method 'testMulti (Ljava/io/File;)V' {
      4      56
      8      56
      d      57
      11      57
      12      58
      13      58
      14      58
      15      61
      16      61
      17      61
      18      64
      19      64
      1a      64
      1b      64
      1d      65
      1e      65
      1f      65
      20      65
      25      78
      2a      79
      2b      79
      2c      79
      30      66
      34      67
      37      69
      38      69
      39      69
      3f      70
      45      71
      4a      75
      4d      93
      52      94
      53      94
      54      94
      58      81
      5c      82
      5f      84
      60      84
      61      84
      67      85
      6d      86
      72      90
      73      97
   }

   method 'testNested1 (Ljava/io/File;)V' {
      4      100
      8      100
      d      101
      11      101
      12      102
      13      102
      14      102
      15      105
      16      105
      17      105
      18      105
      1a      106
      1b      106
      1c      106
      1d      109
      1e      109
      1f      109
      20      109
      25      122
      2a      123
      2b      123
      2c      123
      30      110
      34      111
      37      113
      38      113
      39      113
      3f      114
      45      115
      4a      119
      4d      137
      52      138
      53      138
      54      138
      58      125
      5c      126
      5f      128
      60      128
      61      128
      67      129
      6d      130
      72      134
      73      141
   }

   method 'testNested2 (Ljava/io/File;)V' {
      4      144
      8      144
      d      145
      11      145
      12      146
      13      146
      14      146
      15      149
      16      149
      17      149
      18      152
      19      152
      1a      152
      1b      152
      1d      153
      1e      153
      1f      153
      20      153
      25      166
      2a      167
      2b      167
      2c      167
      30      154
      34      155
      37      157
      38      157
      39      157
      3f      158
      45      159
      4a      163
      4d      181
      52      182
      53      182
      54      182
      58      169
      5c      170
      5f      172
      60      172
      61      172
      67      173
      6d      174
      72      178
      73      185
   }

   method 'testSame1 (Ljava/io/File;)V' {
      4      188
      8      188
      9      189
      a      189
      b      192
      c      192
      d      192
      e      192
      10      193
      11      193
      12      193
      13      196
      14      196
      15      196
      16      196
      1a      209
      1f      210
      20      210
      21      210
      25      197
      29      198
      2c      200
      2d      200
      2e      200
      34      201
      3a      202
      3f      206
      41      224
      45      225
      46      225
      47      225
      4b      212
      4e      213
      51      215
      52      215
      58      216
      5e      217
      63      221
      64      228
   }

   method 'testSame2 (Ljava/io/File;)V' {
      4      231
      8      231
      9      232
      a      232
      b      235
      c      235
      d      235
      e      238
      f      238
      10      238
      11      238
      15      251
      1a      252
      1b      252
      1c      252
      20      239
      24      240
      27      242
      28      242
      29      242
      2f      243
      35      244
      3a      248
      3c      266
      40      267
      41      267
      42      267
      46      254
      49      255
      4c      257
      4d      257
      53      258
      59      259
      5e      263
      5f      270
   }

   method 'testSame3 (Ljava/io/File;)V' {
      4      273
      8      273
      9      274
      a      274
      b      277
      c      277
      d      277
      e      280
      f      280
      10      280
      11      280
      15      293
      1a      294
      1b      294
      1c      294
      20      281
      24      282
      27      284
      28      284
      29      284
      2f      285
      35      286
      3a      290
      3b      297
      3c      297
      3d      297
      3e      297
      41      310
      45      311
      46      311
      47      311
      4b      298
      4e      299
      51      301
      52      301
      58      302
      5e      303
      63      307
      64      314
   }

   method 'testSame4 (Ljava/io/File;)V' {
      4      317
      8      317
      9      318
      a      318
      b      321
      c      321
      d      321
      e      321
      11      334
      15      335
      16      335
      17      335
      1b      322
      1e      323
      21      325
      22      325
      28      326
      2e      327
      33      331
      38      339
      39      339
      3a      339
      3b      339
      3c      339
      3d      339
      3e      339
      3f      339
      40      339
      41      339
      42      339
      43      339
      44      339
      45      339
      46      339
      47      339
      48      339
      49      339
      4a      339
      4b      339
      4c      339
   }

   method 'create (Ljava/io/File;)Ljava/util/Scanner;' {
      4      342
      8      342
   }
}

Lines mapping:
11 <-> 9
13 <-> 14
14 <-> 13
15 <-> 26
16 <-> 30
19 <-> 33
21 <-> 38
22 <-> 37
23 <-> 50
24 <-> 54
27 <-> 57
28 <-> 58
30 <-> 82
31 <-> 65
32 <-> 66
33 <-> 94
34 <-> 98
37 <-> 101
38 <-> 102
40 <-> 126
41 <-> 106
43 <-> 111
44 <-> 110
45 <-> 123
46 <-> 138
47 <-> 142
50 <-> 145
51 <-> 146
53 <-> 170
54 <-> 155
55 <-> 153
56 <-> 154
57 <-> 167
58 <-> 182
59 <-> 186
62 <-> 189
64 <-> 213
65 <-> 193
67 <-> 198
68 <-> 197
69 <-> 210
70 <-> 225
71 <-> 229
74 <-> 232
76 <-> 255
77 <-> 240
78 <-> 239
79 <-> 252
80 <-> 268
81 <-> 271
84 <-> 274
86 <-> 299
87 <-> 282
88 <-> 281
89 <-> 294
91 <-> 298
92 <-> 311
93 <-> 315
96 <-> 340
97 <-> 323
98 <-> 322
99 <-> 335
100 <-> 340
104 <-> 343
Not mapped:
101
