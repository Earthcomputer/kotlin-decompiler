package pkg

import kotlin.coroutines.Continuation
import kotlin.coroutines.intrinsics.IntrinsicsKt
import kotlin.coroutines.jvm.internal.DebugMetadata
import kotlin.coroutines.jvm.internal.SuspendLambda
import kotlin.jvm.functions.Function1
import org.jetbrains.annotations.NotNull
import org.jetbrains.annotations.Nullable

@Metadata(
   mv = {1, 5, 1},
   k = 2,
   xi = 48,
   d1 = {"\u0000\u0016\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0002\n\u0002\u0010\u0000\n\u0002\b\u0004\",\u0010\u0000\u001a\u0018\b\u0001\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u00030\u0002\u0012\u0006\u0012\u0004\u0018\u00010\u00040\u0001ø\u0001\u0000¢\u0006\n\n\u0002\u0010\u0007\u001a\u0004\b\u0005\u0010\u0006\u0082\u0002\u0004\n\u0002\b\u0019¨\u0006\b"},
   d2 = {"sl1", "Lkotlin/Function1;", "Lkotlin/coroutines/Continuation;", "", "", "getSl1", "()Lkotlin/jvm/functions/Function1;", "Lkotlin/jvm/functions/Function1;", "quiltflower_testDataKotlin"}
)
   @NotNull
   private val sl1: Function1<Continuation<? super Unit>, Object> = new NamelessClass_1((Continuation<? super NamelessClass_1>)null)

   @NotNull
   fun getSl1(): Function1<Continuation<? super Unit>, Object> {
      return sl1;
   }

   open {
      // $FF: synthetic class
      @DebugMetadata(
         f = "TestSuspendLambda.kt",
         l = {},
         i = {},
         s = {},
         n = {},
         m = "invokeSuspend",
         c = "pkg.TestSuspendLambdaKt$sl1$1"
      )
      @Metadata(
         mv = {1, 5, 1},
         k = 3,
         xi = 48,
         d1 = {"\u0000\u0006\n\u0000\n\u0002\u0010\u0002\u0010\u0000\u001a\u00020\u0001H\u008a@"},
         d2 = {"<anonymous>", ""}
      )
      class NamelessClass_1  : SuspendLambda() , Function1<Continuation<? super Unit>, Object> {
         var label: int = null

         open constructor($completion: Continuation<? super NamelessClass_1>) {
            super(1, $completion);
         }

         @Nullable
         fun invokeSuspend(@NotNull $result: Object): Object {
            Object var4 = IntrinsicsKt.getCOROUTINE_SUSPENDED();
            switch(this.label) {
            case 0:
               ResultKt.throwOnFailure($result);
               String var2 = "SL1";// 4
               boolean var3 = false;
               System.out.println(var2);
               return Unit.INSTANCE;// 5
            default:
               throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine");
            }
         }

         @NotNull
         fun create(@NotNull $completion: Continuation<?>): Continuation<Unit> {
            return (Continuation)(new NamelessClass_1($completion));
         }

         @Nullable
         fun invoke(@Nullable p1: Continuation<? super Unit>): Object {
            return ((NamelessClass_1)this.create(p1)).invokeSuspend(Unit.INSTANCE);
         }
      }

   }// 3


class 'pkg/TestSuspendLambdaKt' {
   method 'getSl1 ()Lkotlin/jvm/functions/Function1;' {
      0      22
      1      22
      2      22
      3      22
   }

   method '<clinit> ()V' {
      e      76
   }
}

class 'pkg/TestSuspendLambdaKt$sl1$1' {
   method '<init> (Lkotlin/coroutines/Continuation;)V' {
      1      47
      2      47
      3      47
      4      47
      5      47
      6      48
   }

   method 'invokeSuspend (Ljava/lang/Object;)Ljava/lang/Object;' {
      0      52
      1      52
      2      52
      3      52
      4      52
      5      53
      6      53
      7      53
      8      53
      9      53
      1c      55
      1d      55
      1e      55
      1f      55
      20      56
      21      56
      22      56
      23      57
      24      57
      25      58
      26      58
      27      58
      28      58
      29      58
      2a      58
      2b      58
      2c      59
      2d      59
      2e      59
      2f      59
      34      61
      35      61
      39      61
   }

   method 'create (Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;' {
      4      67
      8      67
      9      67
      a      67
      b      67
   }

   method 'invoke (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;' {
      0      72
      1      72
      2      72
      3      72
      4      72
      5      72
      6      72
      7      72
      8      72
      9      72
      a      72
      b      72
      c      72
      d      72
      e      72
   }
}

Lines mapping:
3 <-> 77
4 <-> 57
5 <-> 60
