package pkg

import java.lang.annotation.Retention
import java.lang.annotation.RetentionPolicy

open class TestMemberAnnotations {
   @TestMemberAnnotations.A("const")
   val CONST: int = 42
   @TestMemberAnnotations.A("field")
   private var f: int = null

   @TestMemberAnnotations.A("return")
   private fun f(@TestMemberAnnotations.A("arg") i: int): int {
      return i + this.f + 42;// 12
   }

   @Retention(RetentionPolicy.RUNTIME)
   abstract inner annotation class A {
      abstract fun value(): String default ""
   }
}

class 'pkg/TestMemberAnnotations' {
   method 'f (I)I' {
      0      13
      1      13
      2      13
      3      13
      4      13
      5      13
      6      13
      7      13
      8      13
      9      13
   }
}

Lines mapping:
12 <-> 14
