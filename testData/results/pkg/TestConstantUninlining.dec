package pkg

open class TestConstantUninlining {
   val IMin: int = Integer.MIN_VALUE
   val IMax: int = Integer.MAX_VALUE
   val LMin: long = Long.MIN_VALUE
   val LMax: long = Long.MAX_VALUE
   val FNan: float = Float.NaN
   val FNeg: float = Float.NEGATIVE_INFINITY
   val FPos: float = Float.POSITIVE_INFINITY
   val FMin: float = Float.MIN_VALUE
   val FMax: float = Float.MAX_VALUE
   val DNan: double = Double.NaN
   val DNeg: double = Double.NEGATIVE_INFINITY
   val DPos: double = Double.POSITIVE_INFINITY
   val DMin: double = Double.MIN_VALUE
   val DMax: double = Double.MAX_VALUE
   val FPI: float = (float) Math.PI
   val FPIHalf: float = (float) (Math.PI / 2)
   val FPITwentieth: float = (float) (Math.PI / 20)
   val FPIThreeHalves: float = (float) (Math.PI * 3.0 / 2.0)
   val FPITwoThirds: float = (float) (Math.PI * 2.0 / 3.0)
   val FPITwoNinths: float = (float) Math.PI * 2.0F / 9.0F
   val FPIOver180: float = (float) (Math.PI / 180.0)
   val FE: float = (float) Math.E
   val FENeg: float = (float) -Math.E
   val DPI: double = Math.PI
   val DPIHalf: double = Math.PI / 2
   val DPITwentieth: double = Math.PI / 20
   val DPIThreeHalves: double = Math.PI * 3.0 / 2.0
   val DPITwoThirds: double = Math.PI * 2.0 / 3.0
   val DPITwoNinths: double = Math.PI * 2.0 / 9.0
   val DPIOver180: double = Math.PI / 180.0
   val DE: double = Math.E
   val DENeg: double = -Math.E
}

