package pkg

import java.util.ArrayList
import java.util.Collection
import java.util.List

@Metadata(
   mv = {1, 5, 1},
   k = 2,
   xi = 48,
   d1 = {"\u0000\u0016\n\u0000\n\u0002\u0010 \n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u001e\n\u0002\u0010\u000e\n\u0000\u001a\u001e\u0010\u0000\u001a\b\u0012\u0004\u0012\u00020\u00020\u00012\u000e\u0010\u0003\u001a\n\u0012\u0006\u0012\u0004\u0018\u00010\u00050\u0004H\u0002Â¨\u0006\u0006"},
   d2 = {"foo", "", "Lpkg/Mapping;", "list", "", "", "quiltflower_testDataKotlin"}
)
   private fun foo(list: Collection<String>): List<Mapping> {
      Iterable $this$map$iv = list;
      int $i$f$map = 0;
      Collection destination$iv$iv = new ArrayList(CollectionsKt.collectionSizeOrDefault($this$map$iv, 10));
      int $i$f$mapTo = 0;

      for(Object item$iv$iv : $this$map$iv) {// 12 13
         String it = (String)item$iv$iv;
         int $i$a$-map-TestKotlinConstructorKt$foo$1 = 0;
         Mapping var10000 = new Mapping;
         if (it == null) {// 5
            throw new NullPointerException("null cannot be cast to non-null type kotlin.String");
         }

         var10000.<init>(it);
         Mapping var11 = var10000;
         destination$iv$iv.add(var11);// 14
      }

      return CollectionsKt.toList((List)destination$iv$iv);// 4 6 15
   }


class 'pkg/TestKotlinConstructorKt' {
   method 'foo (Ljava/util/Collection;)Ljava/util/List;' {
      0      14
      1      14
      2      14
      3      14
      4      14
      5      15
      6      15
      7      19
      d      16
      e      16
      f      16
      10      16
      11      16
      12      16
      16      16
      17      16
      18      16
      19      16
      1a      16
      1b      17
      1c      17
      1d      17
      1f      19
      20      19
      21      19
      22      19
      23      19
      24      19
      25      19
      30      19
      31      19
      32      19
      33      19
      34      19
      35      19
      36      19
      37      19
      38      19
      39      29
      3a      29
      3b      20
      3c      20
      3d      20
      3e      20
      3f      20
      40      20
      41      20
      44      21
      45      21
      46      21
      4b      23
      4c      23
      4d      23
      54      24
      55      24
      59      24
      5a      27
      5b      27
      5c      27
      5d      27
      5e      27
      5f      28
      60      28
      63      29
      64      29
      65      29
      66      29
      67      29
      68      29
      69      29
      6e      32
      6f      32
      70      32
      71      32
      72      32
      74      32
      75      32
      76      32
      77      32
      78      32
      79      32
      7a      32
   }
}

Lines mapping:
4 <-> 33
5 <-> 24
6 <-> 33
12 <-> 20
13 <-> 20
14 <-> 30
15 <-> 33
