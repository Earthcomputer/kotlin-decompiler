package pkg

import java.lang.annotation.ElementType
import java.lang.annotation.Target

open class TypeAnnotations {
   @TypeAnnotations.TA("field type")
   private var f1: String = null
   @TypeAnnotations.MixA("field and type")
   private var f2: String = null

   @TypeAnnotations.TA("return type")
   open fun m1(): int {
      return 42;// 18
   }

   open fun m2(@TypeAnnotations.TA("parameter") i: int) {
   }// 21

   @Target({ElementType.FIELD, ElementType.TYPE_USE})
   abstract inner annotation class MixA {
      abstract fun value(): String
   }

   @Target({ElementType.TYPE_USE})
   abstract inner annotation class TA {
      abstract fun value(): String
   }
}

class 'pkg/TypeAnnotations' {
   method 'm1 ()I' {
      0      13
      1      13
      2      13
   }

   method 'm2 (I)V' {
      0      17
   }
}

Lines mapping:
18 <-> 14
21 <-> 18
