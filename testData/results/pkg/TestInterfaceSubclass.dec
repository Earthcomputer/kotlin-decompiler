package pkg

abstract interface TestInterfaceSubclass {
   abstract fun doThing()

   abstract fun doOtherThing(): int

   abstract inner class AbstractClass  : TestInterfaceSubclass {
      abstract fun doDoubleThing(): double
   }

   inner open class Multiple  : TestInterfaceSubclass.AbstractClass() , TestInterfaceSubclass {
      override open fun doThing() {
         System.out.println("Hello");// 29
      }// 30

      override open fun doOtherThing(): int {
         return 1;// 34
      }

      override open fun doDoubleThing(): double {
         return 2.452;// 39
      }
   }

   inner open class Subclass  : TestInterfaceSubclass {
      override open fun doThing() {
         System.out.println("Hi");// 12
      }// 13

      override open fun doOtherThing(): int {
         return 0;// 17
      }
   }
}

class 'pkg/TestInterfaceSubclass$Multiple' {
   method 'doThing ()V' {
      0      13
      1      13
      2      13
      3      13
      4      13
      5      13
      6      13
      7      13
      8      14
   }

   method 'doOtherThing ()I' {
      0      17
      1      17
   }

   method 'doDoubleThing ()D' {
      0      21
      1      21
      2      21
      3      21
   }
}

class 'pkg/TestInterfaceSubclass$Subclass' {
   method 'doThing ()V' {
      0      27
      1      27
      2      27
      3      27
      4      27
      5      27
      6      27
      7      27
      8      28
   }

   method 'doOtherThing ()I' {
      0      31
      1      31
   }
}

Lines mapping:
12 <-> 28
13 <-> 29
17 <-> 32
29 <-> 14
30 <-> 15
34 <-> 18
39 <-> 22
